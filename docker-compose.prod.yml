version: '3'

services:
  application:
    build:
      context: server
      dockerfile: Dockerfile.prod
    env_file:
      - .env.prod
    container_name: backend
    restart: unless-stopped
    command: gunicorn --reload server.wsgi -b 0.0.0.0:8000 --timeout 20
    expose:
      - 8000
    volumes:
      - ./server:/app/application
      - static_volume:/app/application/static
      - media_volume:/app/application/media
    depends_on:
      - database
      - redis

  database:
    image: postgres:16.2-alpine3.18
    env_file: .env.prod
    restart: unless-stopped
    volumes:
      - database-storage:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: intuit-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --replicaof no one --maxmemory-policy noeviction
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4:7.2
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
#      PGADMIN_DEFAULT_PASSWORD: "admin"
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 1G

  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - static_volume:/app/application/static
      - media_volume:/app/application/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - application

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  database-storage:
  redis_data:
  static_volume:
  media_volume:
#  pgadmin-data:
